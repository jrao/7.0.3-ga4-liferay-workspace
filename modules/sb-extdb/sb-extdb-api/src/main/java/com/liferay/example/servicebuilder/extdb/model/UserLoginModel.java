/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.example.servicebuilder.extdb.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UserLogin service. Represents a row in the &quot;ExtDB_UserLogin&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.example.servicebuilder.extdb.model.impl.UserLoginModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.example.servicebuilder.extdb.model.impl.UserLoginImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserLogin
 * @see com.liferay.example.servicebuilder.extdb.model.impl.UserLoginImpl
 * @see com.liferay.example.servicebuilder.extdb.model.impl.UserLoginModelImpl
 * @generated
 */
@ProviderType
public interface UserLoginModel extends BaseModel<UserLogin> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user login model instance should use the {@link UserLogin} interface instead.
	 */

	/**
	 * Returns the primary key of this user login.
	 *
	 * @return the primary key of this user login
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user login.
	 *
	 * @param primaryKey the primary key of this user login
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user ID of this user login.
	 *
	 * @return the user ID of this user login
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user login.
	 *
	 * @param userId the user ID of this user login
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user login.
	 *
	 * @return the user uuid of this user login
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this user login.
	 *
	 * @param userUuid the user uuid of this user login
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the last login of this user login.
	 *
	 * @return the last login of this user login
	 */
	public Date getLastLogin();

	/**
	 * Sets the last login of this user login.
	 *
	 * @param lastLogin the last login of this user login
	 */
	public void setLastLogin(Date lastLogin);

	/**
	 * Returns the total logins of this user login.
	 *
	 * @return the total logins of this user login
	 */
	public long getTotalLogins();

	/**
	 * Sets the total logins of this user login.
	 *
	 * @param totalLogins the total logins of this user login
	 */
	public void setTotalLogins(long totalLogins);

	/**
	 * Returns the longest time between logins of this user login.
	 *
	 * @return the longest time between logins of this user login
	 */
	public long getLongestTimeBetweenLogins();

	/**
	 * Sets the longest time between logins of this user login.
	 *
	 * @param longestTimeBetweenLogins the longest time between logins of this user login
	 */
	public void setLongestTimeBetweenLogins(long longestTimeBetweenLogins);

	/**
	 * Returns the shortest time between logins of this user login.
	 *
	 * @return the shortest time between logins of this user login
	 */
	public long getShortestTimeBetweenLogins();

	/**
	 * Sets the shortest time between logins of this user login.
	 *
	 * @param shortestTimeBetweenLogins the shortest time between logins of this user login
	 */
	public void setShortestTimeBetweenLogins(long shortestTimeBetweenLogins);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(UserLogin userLogin);

	@Override
	public int hashCode();

	@Override
	public CacheModel<UserLogin> toCacheModel();

	@Override
	public UserLogin toEscapedModel();

	@Override
	public UserLogin toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}